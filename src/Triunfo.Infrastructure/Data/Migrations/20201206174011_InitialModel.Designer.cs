// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Triunfo.Infrastructure.Data;

namespace Triunfo.Infrastructure.Data.Migrations
{
    [DbContext(typeof(TriunfoDbContext))]
    [Migration("20201206174011_InitialModel")]
    partial class InitialModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Triunfo.Core.Domain.DetalleParametro", b =>
                {
                    b.Property<int>("IdDetParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Det_Parametro")
                        .HasColumnType("int(11)");

                    b.Property<string>("DescripcionDetParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Descripcion_Det_Parametro")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<bool?>("EstadoDetParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Estado_Det_Parametro")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IdParametro")
                        .HasColumnName("Id_Parametro")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("ValorNumDetParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Valor_Num_Det_Parametro")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("ValorStringDetParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Valor_String_Det_Parametro")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.HasKey("IdDetParametro")
                        .HasName("PRIMARY");

                    b.HasIndex("IdParametro")
                        .HasName("FK_DetParametro_Parametro");

                    b.ToTable("detalle_parametro");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Efmigrationshistory", b =>
                {
                    b.Property<string>("MigrationId")
                        .HasColumnType("varchar(150)")
                        .HasMaxLength(150);

                    b.Property<string>("ProductVersion")
                        .IsRequired()
                        .HasColumnType("varchar(32)")
                        .HasMaxLength(32);

                    b.HasKey("MigrationId")
                        .HasName("PRIMARY");

                    b.ToTable("__efmigrationshistory");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.FacturaCabecera", b =>
                {
                    b.Property<int>("IdFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Factura")
                        .HasColumnType("int(11)");

                    b.Property<DateTime?>("FechaFactura")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Fecha_Factura")
                        .HasColumnType("date")
                        .HasDefaultValueSql("'current_timestamp()'");

                    b.Property<int?>("IdCliente")
                        .HasColumnName("Id_Cliente")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IdVendedor")
                        .HasColumnName("Id_Vendedor")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("IdFactura")
                        .HasName("PRIMARY");

                    b.HasIndex("IdCliente")
                        .HasName("FK_FacturaC_Persona");

                    b.HasIndex("IdVendedor")
                        .HasName("FK_FacturaC_Persona2");

                    b.ToTable("factura_cabecera");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.FacturaDetalle", b =>
                {
                    b.Property<int>("IdFacturaDet")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Factura_Det")
                        .HasColumnType("int(11)");

                    b.Property<int?>("CantidadProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Cantidad_Producto")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("Descuento")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IdFactura")
                        .HasColumnName("Id_Factura")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IdProducto")
                        .HasColumnName("Id_Producto")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("ValorUnitario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Valor_Unitario")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("IdFacturaDet")
                        .HasName("PRIMARY");

                    b.HasIndex("Descuento")
                        .HasName("FK_FacturaDet_DetParametro");

                    b.HasIndex("IdFactura")
                        .HasName("FK_FacturaDet_FacturaC");

                    b.HasIndex("IdProducto")
                        .HasName("FK_FacturaDet_Producto");

                    b.ToTable("factura_detalle");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Inventario", b =>
                {
                    b.Property<int>("IdInventario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Inventario")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdProducto")
                        .HasColumnName("Id_Producto")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IdProveedor")
                        .HasColumnName("Id_Proveedor")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("PrecioLlegada")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Precio_Llegada")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("IdInventario")
                        .HasName("PRIMARY");

                    b.HasIndex("IdProducto")
                        .HasName("FK_Inventario_Producto");

                    b.HasIndex("IdProveedor")
                        .HasName("FK_Inventario_Persona");

                    b.ToTable("inventario");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Parametro", b =>
                {
                    b.Property<int>("IdParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Parametro")
                        .HasColumnType("int(11)");

                    b.Property<string>("DescripcionParametro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Descripcion_Parametro")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.HasKey("IdParametro")
                        .HasName("PRIMARY");

                    b.ToTable("parametro");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Pe", b =>
                {
                    b.Property<int>("IdPe")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_PE")
                        .HasColumnType("int(11)");

                    b.Property<string>("ApellidoPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Apellido_persona")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(45);

                    b.Property<string>("CorreoPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Correo_persona")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(45);

                    b.Property<string>("NombrePersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Nombre_persona")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(45);

                    b.Property<string>("NumDocPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Num_Doc_Persona")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(45);

                    b.Property<string>("RazonSocial")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Razon_social")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(45);

                    b.Property<string>("TelefonoPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Telefono_persona")
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(45);

                    b.Property<int?>("TipoDocPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Tipo_Doc_persona")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("IdPe")
                        .HasName("PRIMARY");

                    b.ToTable("pe");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Persona", b =>
                {
                    b.Property<int>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Persona")
                        .HasColumnType("int(11)");

                    b.Property<string>("ApellidoPersona")
                        .IsRequired()
                        .HasColumnName("Apellido_Persona")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("CorreoPersona")
                        .IsRequired()
                        .HasColumnName("Correo_Persona")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NombrePersona")
                        .IsRequired()
                        .HasColumnName("Nombre_Persona")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("NumDocPersona")
                        .IsRequired()
                        .HasColumnName("Num_Doc_Persona")
                        .HasColumnType("varchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("RazonSocial")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Razon_Social")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<string>("TelefonoPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Telefono_Persona")
                        .HasColumnType("varchar(15)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(15);

                    b.Property<int>("TipoDocPersona")
                        .HasColumnName("Tipo_Doc_Persona")
                        .HasColumnType("int(11)");

                    b.HasKey("IdPersona")
                        .HasName("PRIMARY");

                    b.HasIndex("TipoDocPersona", "NumDocPersona")
                        .HasName("Tipo_Doc_Persona_Num_Doc_Persona");

                    b.ToTable("persona");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Pqr", b =>
                {
                    b.Property<int>("IdPqr")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_pqr")
                        .HasColumnType("int(11)");

                    b.Property<string>("Apellidos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<string>("EMail")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("E_mail")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<string>("Mensaje")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<string>("Nombres")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<string>("NumDocumento")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Num_Documento")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<string>("Telefono")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<int?>("TipoDocumento")
                        .HasColumnName("Tipo_Documento")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("TipoSolicitud")
                        .HasColumnName("Tipo_solicitud")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("IdPqr")
                        .HasName("PRIMARY");

                    b.HasIndex("TipoDocumento")
                        .HasName("FK1");

                    b.HasIndex("TipoSolicitud")
                        .HasName("FK_pqr_detalle_parametro");

                    b.ToTable("pqr");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Producto")
                        .HasColumnType("int(11)");

                    b.Property<int?>("CategoriaProducto")
                        .HasColumnName("Categoria_Producto")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IvaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Iva_Producto")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<string>("NombreProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Nombre_Producto")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<int?>("PrecioSalidaPro")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Precio_Salida_Pro")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("IdProducto")
                        .HasName("PRIMARY");

                    b.HasIndex("CategoriaProducto")
                        .HasName("FK_Producto_DetParametro");

                    b.ToTable("producto");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Ue", b =>
                {
                    b.Property<int>("IdUe")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id_UE")
                        .HasColumnType("int(11)");

                    b.Property<string>("Clave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(45);

                    b.Property<bool?>("Estado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IdPersona")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID_PERSONA")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("RolUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rol_usuario")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'NULL'");

                    b.HasKey("IdUe")
                        .HasName("PRIMARY");

                    b.ToTable("ue");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id_Usuario")
                        .HasColumnType("int(11)");

                    b.Property<string>("ClaveUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Clave_Usuario")
                        .HasColumnType("varchar(50)")
                        .HasDefaultValueSql("'NULL'")
                        .HasMaxLength(50);

                    b.Property<bool?>("EstadoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Estado_Usuario")
                        .HasColumnType("bit(1)")
                        .HasDefaultValueSql("'NULL'");

                    b.Property<int?>("IdPersona")
                        .HasColumnName("Id_Persona")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("RolUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Rol_Usuario")
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.HasKey("IdUsuario")
                        .HasName("PRIMARY");

                    b.HasIndex("IdPersona")
                        .HasName("FK_Usuario_Persona");

                    b.HasIndex("RolUsuario")
                        .HasName("FK_Usuario_DetParametro");

                    b.ToTable("usuario");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.DetalleParametro", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.Parametro", "IdParametroNavigation")
                        .WithMany("DetalleParametro")
                        .HasForeignKey("IdParametro")
                        .HasConstraintName("FK_DetParametro_Parametro");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.FacturaCabecera", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.Persona", "IdClienteNavigation")
                        .WithMany("FacturaCabeceraIdClienteNavigation")
                        .HasForeignKey("IdCliente")
                        .HasConstraintName("FK_FacturaC_Persona");

                    b.HasOne("Triunfo.Core.Domain.Persona", "IdVendedorNavigation")
                        .WithMany("FacturaCabeceraIdVendedorNavigation")
                        .HasForeignKey("IdVendedor")
                        .HasConstraintName("FK_FacturaC_Persona2");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.FacturaDetalle", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.DetalleParametro", "DescuentoNavigation")
                        .WithMany("FacturaDetalle")
                        .HasForeignKey("Descuento")
                        .HasConstraintName("FK_FacturaDet_DetParametro");

                    b.HasOne("Triunfo.Core.Domain.FacturaCabecera", "IdFacturaNavigation")
                        .WithMany("FacturaDetalle")
                        .HasForeignKey("IdFactura")
                        .HasConstraintName("FK_FacturaDet_FacturaC");

                    b.HasOne("Triunfo.Core.Domain.Producto", "IdProductoNavigation")
                        .WithMany("FacturaDetalle")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_FacturaDet_Producto");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Inventario", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.Producto", "IdProductoNavigation")
                        .WithMany("Inventario")
                        .HasForeignKey("IdProducto")
                        .HasConstraintName("FK_Inventario_Producto");

                    b.HasOne("Triunfo.Core.Domain.Persona", "IdProveedorNavigation")
                        .WithMany("Inventario")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK_Inventario_Persona");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Persona", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.DetalleParametro", "TipoDocPersonaNavigation")
                        .WithMany("Persona")
                        .HasForeignKey("TipoDocPersona")
                        .HasConstraintName("FK_Persona_DetParametro")
                        .IsRequired();
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Pqr", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.DetalleParametro", "TipoDocumentoNavigation")
                        .WithMany("PqrTipoDocumentoNavigation")
                        .HasForeignKey("TipoDocumento")
                        .HasConstraintName("FK1");

                    b.HasOne("Triunfo.Core.Domain.DetalleParametro", "TipoSolicitudNavigation")
                        .WithMany("PqrTipoSolicitudNavigation")
                        .HasForeignKey("TipoSolicitud")
                        .HasConstraintName("FK_pqr_detalle_parametro");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Producto", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.DetalleParametro", "CategoriaProductoNavigation")
                        .WithMany("Producto")
                        .HasForeignKey("CategoriaProducto")
                        .HasConstraintName("FK_Producto_DetParametro");
                });

            modelBuilder.Entity("Triunfo.Core.Domain.Usuario", b =>
                {
                    b.HasOne("Triunfo.Core.Domain.Persona", "IdPersonaNavigation")
                        .WithMany("Usuario")
                        .HasForeignKey("IdPersona")
                        .HasConstraintName("FK_Usuario_Persona");
                });
#pragma warning restore 612, 618
        }
    }
}
